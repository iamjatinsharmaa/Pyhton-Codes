PRAGTICAL - 1

Aim  :- Write a Python program to display a table of a number.


Program :-

number = int(input ("Enter the number of which the user wants to print the table: ")) # We are 
using "for loop" to iterate the 10 times
print ("The Table of: ", number)

for count in range(1, 11):

print (number, ’x’, count, ’=’, number * count)


Output..






Aim :- Write a Python program to calculate the tip from the bill and the quality of the service. if 
service is good then tip is 20% of the bill else it is 15% of the bill. Display the tip for the 
user.




Program


print("What was the value of the bill?") bill = input()
# Find out how the service was. This should be the word "good" or "bad". Any word other than # 
"good" will be considered the same as "bad". print "How was the service?"
service = input()

# Good service gets a 20% tip. Bad service gets 15%. if service == "good":
percentage = 0.20 else:
percentage = 0.15

# Calculate and display the tip. The tip here is based on the whole bill, including tax. XXX We 
could
# remove the tax first. Perhaps ask the user whether they want the tax included in the calculation?
tip = bill * percentage print(tip)













8 | P a g e


output.



































Result :- succesfully executed











9 | P a g e




Aim :- Write a Python program to find those numbers which are divisible by 5 and multiple of 6, 
between 1500 and 2700 (both included). Also print the sum of all numbers.


Program

nl=[]
for x in range(1500, 2700):
if (x%5==0) and (x%6==0): nI.append(str(x))
print (’,’.join(nI))



Output..

























Result :- succesfully execu




Aim :- Write a Python program that randomly generates an integer between 0 and 100, inclusive. The 
program prompts the user to enter a number continuously until the number matches the randomly 
generated number. For each user input, the program tells the user whether the input is too low or 
too high, so the user can choose the next input intelligently. Also print the number of attempts to 
get the success.

Program import random
num = random.randint(0, 100) guess = None
while guess != num:
guess = int(input("Enter your guess :")) if guess == num:
print(f'Yes the number is {num}") break
if guess > num:
print("Your guess is too high") else:
print("Your guess too low") Output..
















Result :- succesfully executed.









13 | P a g e






Aim:- Write a Python program that generates five questions and reports the number of the correct 
answers after a student answers all five questions.


Program

import random import time t=time.perf counter() c=0
for i in range(5)
x = random.randint(0,100)
y = random.randint(0,100)
res = int(input(f’What is {x}-{y} = ")) if res == x-y:
c+=1
print("Your answer is correct!")
else
print("Your answer is wrong.") print(I'{x} -(y} should be {x-y}")

t = time.perf counter() - t print("Correct counter is : ",c) print(fi'Test time is {t:.2f} 
seconds")



Output..















Result:-successfully executed.



15 | P a g e





Aim  :- Write a Python program to formulate a list comprehension that prints even numbers from a 
range of 1-14.


Program

list1 = [1,2,3,4,5,6,7,8,9,10,11,12,13,14]
for num in list1: if num%2 ==0:
print(num,end="") Output




























Result:-successfully executed






Aim :- Write a Python program that formulates a list comprehension to calculate the squares of 
numbers in a list range of 1-14.
Program 1st=[1,2,3,4,5,6,7,8,9,10,11,12,13,14]
for i in range(len(1st)): 1st[i]=1st[i]**2
print(1st)




























Result:-successfully executed







19






Aim :- Write a Python program to calculate the squares of first 10 Natural Numbers using List 
comprehension.


1st=[1,2,3,4,5,6,7,8,9,10]
for i in range(len(1st)): 1st[i]=lst[i]**2
print(1st)




Output..






Aim :- Consider the following List: vehicle = [‘car&’,’bus’, ‘truck’,‘cycle’, ‘train”,].Write a 
Python Program that capitalizes the strings that begin with ‘C’.


Program

# Python code to convert all string # from uppercase to lowercase.

# Initialisation
input = [’car', 'bus', 'truck' , 'cycle’ , 'train']

# Converting
1st = [x.upper() for x in input] # printing output
print(1st) L1=[1,2,3,4,5,6,7,8]

even sq,odd sq = [],[]

for i in LI:
(even sq if i%2==0 else odd sq).append(i*i)

print(even sq,odd sq)

Output...
















Result :- Successfully created.


23 | P a g e

PRAGTICAL - 10 

Aim :- Consider the following list: 11 = [1, 2, 3, 4, 5, 6, 7, 8, 9]. Write a Python Program to 
create a list comprehension to find the squares of Even numbers of 11.

Program

L1=[1,2,3,4,5,6,7,8]

even_sq,odd_sq = [],[]

for i in LI:
(even sq if i%2==0 else odd sq).append(i*i)

print(even sq,odd sq)


Output..



L*•t*,2, ,s,s,c,'.41                                                      *


' "°’ ” ’”"" """    xsssARi: c:/userspsrS6 sppoara sonal Programs/eyrhon/iytbon3l0 s.py =



















Result:- successfully executed.









25 | P a g e

PRACTICAL - 11 


Aim :- Write a Python Program to consider two lists with numeric values and make use of List 
comprehension to create another list that contains the common elements in both lists.


Program

# Python program to find the common elements # in two lists
def common member(a, b): a set = set(a)
b set = set(b)

if(a set & b set):
print(a set & b set)
else:
print("No common elements")


a = [1, 2, 3, 4, 5]
b  [5, 6, 7, 8, 9]
common member(a, b)

a = [1, 2, 3, 4, 5]
b = [6, 7, 8, 9]
common member(a, b)


Output..






















27

PRACTICAL - IB

Aim :- Consider the following string: str =”Mohit=22,Deepak=11,Riya=19,Sumit=23”. Write a Python 
Program to convert the following string into Dictionary with distinct Name &amp; Age key pairs.


Program

# Python3 code to convert # a string to a dictionary

# Initializing String
string = "(’Mohit’:22, ’Deepak".11, 'Riya”.19, 'Sumit".23}"

# eval() convert string to dictionary Dict = eva1(string)
print(Dict) print(Dict[’Mohit’]) print(Diet[’Deepak’]) print(Dict[’Riya']) print(Dict[’Sumit'])



Output..


















Result:- successfully executed,




29 | P a g e



Aim: - Write a Python Program to count the number of occurrences of each letter in a string taken 
from user input.

Program

# Python Program to Count Occurrence of a Character in a String string = input("Please enter your 
own String : ")
char = input("Please enter your own Character : ")

count = 0

for i in range(len(string)): if(string[i] == char):
count = count  1

print("The total Number of Times ", char, " has Occurred = " , count)



Output..






cbar = iaputl'zIease aar=: your wn character : "}

—=== essence: c: 7 osersf ps r 96/yp£Jaia/£ocal/Pro-yrans/ P2zhonf Pychon3£0/s . p¥ ———










Result:- successfully execute




31 | P a g e




Aim :- Write a Python Program to print Process IDs of a Python Process. If the process is a Parent 
Process, print Parent Process ID; if it is a Child Process, print both Parent &amp; Child Process 
IDs.


Program

from multiprocessing import Process import os
def info(title): print(title)
print(’module name:',  name  ) print(’parent process:', os.getppid()) print(’process id:', 
os.getpid())
def f(name): info(’function I) print(’hello’, name)
if  name  ==  main info(’Main line')
p = Process(target=f, args=(’bob',)) p.start()
p.join()


Output..








hello bo b
















Result :- Successfully execute.



33 | P a g e

PRACTICAL - 15 

Aim :- Write a Menu-driven program that keeps record of books & journals available in a library. 
Create a class Book with a Constructor to initialize title, author &amp; price. Create two member 
functions read() &amp; display() in the same class. Your menu must display two choice: 1- add new 
book; 2- display book.

Program class library:
def init (self): self.title="" self.author="" self.publisher=""
def read(self):
self.title=input("Enter Book Title: ") self.author=input("Enter Book author: ") 
self.pub1isheminput("Enter Book Publisher: ")
def display(self): print("Title:", se1f.tit1e) print("Author:", self.author)
print("Publisher:", self.publisher) print("\n")
my book=[] ch=’y' while(ch=='y'):
print("'
1. Add New Book
2. Display Books

choice=int(input("Enter choice: ")) if(choice==1):
book=library() book.read()
my book.append(book) elif(choice==2):
for i in my book: i.display()
else:
print("Invalid choice!") ch=input("Do you want to continue..?")
print("Bye!")










35 | P a g e

Output..






























Result :- successfully executed

















36 | P a g e




Aim :- Write a socket program to create communication between client & server.

Program

Server.py import socket import time

# create TCP/IP socket
sock = socket.socket(socket.AF INET, socket.SOCK STREAM)

# retrieve local hostname
local hostname = socket.gethostname()

# get fully qualified hostname local fqdn = socket.getfqdn()

# get the according IP address
ip address = socket.gethostbyname(local hostname)

# bind the socket to the port 23456, and connect server address = (ip address, 23456) 
sock.connect(server address)
print ("connecting to %s (%s) with %s" % (local hostname, local fqdn, ip address))# define example 
data to be sent to the server
temperature data = ["15", "22", "21", "26", "25", "19"] for entry in temperature data:
print ("data: %s" % entry)
new data = str("temperature: %s\n" % entry).encode("utf-8") sock.senda1l(new data)

# wait for two seconds time.sleep(2)

# close connection sock.close()

client.py import socket
# create TCP/IP socket
sock   =   socket.socket(socket.AF     INET,   socket.SOCK      STREAM)                

38 | P a g e

# retrieve local hostname
local hostname = socket.gethostname()

# get fully qualified hostname local fqdn = socket.getfqdn()

# get the according IP address
ip address = socket.gethostbyname(local hostname)

# output hostname, domain name and IP address
print ("working on %s (%s) with %s" % (local hostname, local fqdn, ip address))

# bind the socket to the port 23456 server address = (ip address, 23456)
print ('starting up on %s port %s' % server address) sock.bind(server address)
# listen for incoming connections (server mode) with one connection at a time sock.listen(1)

while True:
# wait for a connection
print ('waiting for a connection') connection, client address = sock.accept()

tw:
# show who connected to us
print ('connection from', client address)

# receive the data in small chunks and print it while True:
data = connection.recv(64) if data:
# output received data print ("Data: %s" % data)
else:
# no more data -- quit the loop print ("no more data.")
break
finally:
# Clean up the connection connection.close()














39 | P a g e



























































Result:- successfully executed

PkOORAH - 17
Aim :- Write a socket program to create communication between client & server & receive message 
from both end.

Program

import socket import time

# create TCP/IP socket
sock = socket.socket(socket.AF INET, socket.SOCK STREAM)

# retrieve local hostname
local hostname = socket.gethostname()

# get fully qualified hostname local fqdn = socket.getfqdn()

# get the according IP address
ip address = socket.gethostbyname(local hostname)

# bind the socket to the port 23456, and connect server address = (ip address, 23456) 
sock.connect(server address)
print ("connecting to %s (%s) with %s" 0/o (local hostname, local fqdn, ip address))

# define example data to be sent to the server temperature data = ["15", "22", "21", "26", "25", 
"19"] for entry in temperature data:
print ("data: %s" % entry)
new data = str("temperature: %s\n" % entry).encode("utf-8") sock.senda11(new data)

# wait for two seconds time.sleep(2)

# close connection sock.close()








42 | P a g e

Server.py

import socket

# create TCP/IP socket
sock = socket.socket(socket.AF INET, socket.SOCK STREAM)

# retrieve local hostname
local hostname = socket.gethostname()

# get fully qualified hostname local fqdn = socket.getfqdn()

# get the according IP address
ip address = socket.gethostbyname(local hostname)

# output hostname, domain name and IP address
print ("working on %s (0/os)with %s" Ono(local hostname, local fqdn, ip address))

# bind the socket to the port 23456 server address = (ip address, 23456)
print ('starting up on %s port %s' % server address) sock.bind(server address)

# listen for incoming connections (server mode) with one connection at a time sock.listen(1)

while True:
# wait for a connection
print ('waiting for a connection') connection, client address = sock.accept()

try:
# show who connected to us
print ('connection from', client address)

# receive the data in small chunks and print it while True:
data = connection.recv(64) if data:
# output received data print ("Data: %s" % data)
else:
# no more data -- quit the loop



43 | P a g e



finally:


Output..
print ("no more data.") break












’I'OCRSS lI4iS3-C ,.'iii t%iI ?CCl@ 0
































Result :- Successfully executed.










44 | P a g e

P9O6RAM - 18

Aim :- Write a program to create communication between client & server &amp; receive the
messages from the server till the connection is terminated.


Program

Server.py import socket
s = socket.socket(socket.AF INET,socket.SOCK_STREAM) host=socket.gethostname()
port=l255 s.bind((host,port)) s.listen(5)
socketc1ient,address = s.accept() print("got connection from ",address) con=True
while con: msg=socketclient.recv(1024) msg=msg.decode("utf-8") print(msg)
if msg == "quit": con = False s.close()

client.py import socket
s = socket.socket(socket.AF INET,socket.SOCK_STREAM) host=socket.gethostname()
port=l255
s connect((host,port)) con=True
while con: msg=input("enter msg :") #s.send(bytes(msg))
s.send(msg.encode("utf-8")) if msg == "quit":
con = False s.close()








46 | P a g e














































Result:- Successfully executed.

















47 | P a g e

PkOORAH - 1§ 

Aim :- Write a program to read a URL. Parse the URL and handle the error in fetching the URL.


Program

from urllib.request import Request, urlopen from urllib.error import URLError
req = Request(someurl) try:
response = urlopen(req) except URLError as e:
if hasattr(e, ’reason’):
print('We failed to reach a server.’) print(’Reason: ', e.reason)
elif hasattr(e, ’code’):
print('The server cou1dn\’t fu1fi11 the request.’) print(’Error code: ', e.code)
else:
# everything is fine
























Result:- Successfully Execute




49

PkOORAH - 20

Aim :- Create a XML file and parse XML with SAX (Simple API for XML).

Program

#!/usr/bin/python import xml.sax
class MovieHandler( xml.sax.ContentHandler ): def  init (selfJ:
self.CurrentData = "" se1f.type = "" self.format = "" self.year = "" self.rating = "" self.stars = 
"" self.description = ""
# Call when an element starts
def startE1ement(self, tag, attributes): self.CurrentData = tag
if tag -  "movie":
print "*****Movie*****" title = attributes["title"] print "Title:", title

# Call when an elements ends def endE1ement(self, tag):
if se1f.CurrentData == "type": print "Type:", self.type
elif self.CurrentData == "format": print "Format:", self.format
elif self.CurrentData == "year": print "Year:", self.year
elif self.CurrentData == "rating": print "Rating:", se1f.rating
elif self.CurrentData == "stars": print "Stars:", self.stars
elif self.CurrentData == "description": print "Description:", self.description
self.CurrentData = ""

# Call when a character is read def characters(self, content):
if se1f.CurrentData == "type": self.type = content
elif self.CurrentData == "format": self.format = content
elif self.CurrentData == "year": self.year = content



51 | P a g e

elif self.CurrentData == "rating":
self.rating = content
elif se1f.CurrentData == "stars":
self.stars = content
elif se1f.CurrentData == "description": self.description = content

if(  name  == "  main  "):

# create an XMLReader
parser = xml.sax.make  arser() # turn off namepsaces
parser.setFeature(xml.sax.handler.feature namespaces, 0) # override the default ContextHandler
Handler = MovieHandler() parser.setContentHandler( Handler ) parser.parse("movies.xml")


Output..


















0 =:





Result:- Successfully Execute








52|

PkOORAH - 21 

Aim :- Write a GUI program to calculate the area of a circle and display both in a text box.

Program

from tkinter import*

def calcArea(r): return 3.14*(r**2)

def clickArea(): area.set(ca1cArea(height.get()))

root = Tk() root.title("Calculate Area")

Label(root, text="Radius").grid(row=0, co1umn=0) width = IntVar()

#Entry(root, textvariable=width).grid(row=0, column=1) #Labe1(root, text="Value of pi 
").grid(row=1, column=0) height = IntVar()

Entry(root, textvariable=height).grid(row=l, co1umn=1) Labe1(root, text="Area").grid(row=2, 
column=0)
area = IntVar()

Label(root, textvariable=area).grid(row=2, co1umn=1)
button = Button(root, text="Calculate Area", command=c1ickArea)

button.grid(row=3, co1umn=0, co1umnspan=2) root.main1oop()

















54 | P a g e



Output..









def ca1Mrea(r):
return 3.1<•(r*•z)
8
9 der ciickArea( }:
area.set(ca1cArea( hei9h t. get( } })





I ula





50.24
IZ
rat = Tk( }
rat.title( ’Calculate area’ }

17

20
21
22
23 Entry( rat , textvariable=heiqht).grid( rel  , colurin=l } Z4 Label( rat ,      " }.9rid( 
rovi=Z, cot urine)
Z5 area  IntVar( }
Z6
27 Label.{rcot, textvartab1.e=area) .grtd(re./=2, cot.unn=1)
28 button = Button(root, text=’Calculate Area’, command=c1tckArea)
29
30 but ton .q rid( rovr3, col urine , columns
rat.riai map( }
















Result:- successfully executed




















55 | P a g e

PkOORAH - 2B

Aim :- Write a python SQLite program to create a student table with the following fields:
Registration_no, Name, Phone_no, Branch, Year Perform the following operations:
a. Insert 5 records in table.
b. Display First Record only
c. Display all Records
d. Update any Record
e. Delete any one Record.


Code

import sqlite3 conn=sqlite3.connect('test5.db') print('Opened sucessfully')

import sqlite3 conn=sqlite3.connect('test6.db') print(’Opened sucessfully’)


command="create table student(Reg no text,Name text,Branch text,Year int)" conn.execute(command)
print("Command executed sucessfully") # Insert data in table
import sqlite3 conn=sq1ite3.connect('test6.db') print(’Opened sucessfully’)

command="insert into student (Reg no,Name,Branch,Year) values ('RA12304’,'Rituraj',’MCA',1)" 
conn.execute(command)
command="insert into student (Reg no,Name,Branch,Year) values (’RA12305’,'Sarita','MCA',1)" 
conn.execute(command)
command="insert into student (Reg no,Name,Branch,Year) values ('RAl2305’,'Tejveer',’MCA',1)" 
conn.execute(command)
command="insert into student (Reg no,Name,Branch,Year) values (’RA12321','Deepak','MCA',1)" 
conn.execute(command)
command="insert into student (Reg no,Name,Branch,Year) values (’RA12327’,'Suraj','MCA',1)" 
conn.execute(command)
command="insert into student (Reg no,Name,Branch,Year) values ('RA12332',’Roshan','MCA',1)" 
conn.execute(command)
conn.commit()
print("Record Inserted sucessfully")


# Retreive record from table import sqlite3


57 | P a g e

conn=sqlite3.connect('test6.db') print('Opened sucessfully')

# ----It will print the object -----
command="select * from student" result=conn.execute(command)
# print(result)

# ------- Print the list of tuples --------
i=result.fetchall() print(r)

# ------- Print the first tuple -----------
r2=result.fetchone() print(r2)


# for i in result:
#  print(i)

# print(’Reg no |  Name  | Branch | Year') # for i in result:
#  Reg no,Name,Branch,Year=i
#  print(Reg no," ",Name,"  ",Branch,"  ",Year) print("Record Printed sucessfully")
# Udation of record in table import sqlite3 conn=sqlite3.connect('test6.db') print('Opened 
sucessfully')

command="update student set Name='Shivam’ where Reg no='RA12332"' result=conn.execute(command)
conn.commit()
print("Total Changes : ",conn.total changes) print(’Reg no |  Name  | Branch | Year’)
result=conn.execute("select * from student") for i in result:
Reg no,Name,Branch,Year=i
print(Reg no," ",Name,"  ",Branch," ",Year)

# To delete a particular record import sqlite3 conn=sqlite3.connect(’test6.db') print(’Opened 
sucessfully’)




58 | P a g e

command="delete from student where Name=’Shivam"’ conn.execute(command)
conn.commit()
print("Total Changes : ",conn.total changes)

result=conn.execute("select * from student") for i in result:
Reg no,Name,Branch,Year=i
print(Reg no," ",Name,"  ",Branch," ",Year)



Output...



























Result :- Successfully executed.











59 | P a g e

PkOORAH - 29

Aim :- Write an event driven program in python.

Code

import turtle

turtle.setup(400,500)    # Determine the window size wn = turtle.Screen()     # Get a reference to 
the window wn.title("Handling keypresses!")  # Change the window title wn.bgco1or("lightgreen")    
# Set the background color tess = turtle.Turtle()    # Create our favorite turtle

# The next four functions are our "event handlers". def h1():
tess.forward(30)

def h2():
tess.left(45)

def h3():
tess.right(45)

def h4():
wn.bye()       # Close down the turtle window

# These lines "wire up" keypresses to the handlers we've defined. wn.onkey(h1, "Up")
wn.onkey(h2, "Left") wn.onkey(h3, "Right") wn.onkey(h4, "q")

# Now we need to tell the window to start listening for events, # If any of the keys that we're 
monitoring is pressed, its
# handler will be called. wn.listen() wn.mainloop()
















61 | P a g e

















































Result:- Successfully Execute

PkOORAH - 24 

Aim :- Write a program to create a login window . Use dialogue boxes to display all the operations.

Code

from tkinter import *
from tkinter import messagebox window=Tk() window.title('Login Screen') window.geometry(’400xl50’)

11=Labe1(window,text=’Username:’,font=(14)) 12=Labe1(window,text=’Password:’,font=(14)) 
11.grid(row=0,column=0,padx=5,pady=5)  12.grid(row=1,co1umn=0,padx=5,pady=5) username=StringVar()
password=StringVar()

t1=Entry(window,textvariable=username,font=(14)) 
t2=Entry(window,textvariab1e=password,font=(14),show='*') t1.grid(row=0,column=l)
t2.grid(row=1,co1umn=1) def login():
if username.get()=='admin' and password.get()=='admin". messagebox.showinfo(tit1e=’Login 
Status’,message=’You have logged in')
else:
messagebox.showerror(title='Login Error',message=’Username/Password incorrect’)

def cancel():
status=messagebox.askyesno(title='Question',message=’Do you want to close the window?') if 
status==True:
window.destroy() else:
messagebox.showwarning(tit1e=’Warning Message',message=’Please Login  Again!!’) b 
l=Button(window,command=1ogin,text=’Login’,font=(14)) 
b2=Button(window,command=cance1,text='Cance1’,font=(14)) b1.grid(row=2,co1umn=1,sticky=W)
b2.grid(row=2,co1umn=1,sticky=E) window.mainloop()







64 | P a g e





Output..





Username:
Password:
Login    Cancel
